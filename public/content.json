[{"title":"独处的方式，暴露了你的层次【转载】","date":"2018-03-21T03:20:59.000Z","path":"2018/03/21/独处的方式，暴露了你的层次/","text":"看网友说过一件很有趣的事：如果是一个人去吃海底捞，服务生会在孤独食客的对面放一只小熊娃娃来陪伴他。 说这事有趣，源于海底捞提供的个性服务，但这引发了一个问题：一个人吃饭，真的就孤独吗?一个人独处时，就一定需要有人陪伴吗? 当你看过书籍《孤独：回归自我》之后，你给出的答案一定是否定的。 因为孤独，让你的人生丰富而充实。 孤独是最好的增值期作家李尚龙有一个朋友，是一个程序员。因为不喜欢自己的工作，朋友去年辞职，一年没有找工作。 因为担心他的状态，李尚龙吃饭的时候就会关心的问：“你什么时候找工作阿?” 朋友笑着说：“不着急”。 “为什么不着急阿?” 朋友接着说：“我还有点存款，够扛一年。” “那也不能这么作死吧，花完了呢，至少应该先找个工作干着呗?” 朋友摇摇头说：“真不着急，试问，人生有多少时间可以这样什么事情也不做呢?” 听完，李尚龙也就没再说什么。接下来的一年时间，大家也鲜少联系。 一年后，李尚龙才发现，朋友用这一年的时间考了驾照，健身减肥了20斤，读了100多本书，还自考了注册会计师，并借此成功转了行。 当朋友走进一家会计事务所时，他才告诉李尚龙，这一年为什么很少能看到他。 因为，他在这一年的寂寞时光里，平静努力着，终于，他成功转型，变成了自己喜欢的样子。 《夏目友人帐》有一句台词：“我必须承认，生命中大部分时光是属于孤独的，努力成长是在孤独里可以进行的最好的游戏。” 不要因为孤独而耐不住寂寞，因为这是你人生中最好的增值期。 你独处的方式，暴露了你的层次","tags":[{"name":"励志美文","slug":"励志美文","permalink":"http://www.3cat.top/tags/励志美文/"}]},{"title":"ArcFace图像YUV格式对照","date":"2018-03-02T04:00:54.000Z","path":"2018/03/02/YUV格式对照/","text":"1.Linux下使用mediainfo filename查看图像信息123456789101112131415hch@hch-PC:~/Desktop/arcface/ArcFace/detection/inc$ mediainfo *.jpegGeneralComplete name : hz.jpegFormat : JPEGFile size : 124 KiBImageFormat : JPEGWidth : 1 200 pixelsHeight : 800 pixelsColor space : YUV #色彩格式Chroma subsampling : 4:2:0 #采样比例Bit depth : 8 bitsCompression mode : LossyStream size : 124 KiB (100%) 2.使用arcface编程时查看代码头文件&lt;asvloffscreen.h&gt;下的定义：12345678910111213/*8 bit Y plane followed by 8 bit 2x2 subsampled U and V planes*/#define ASVL_PAF_I420 0x601/*8 bit Y plane followed by 8 bit 1x2 subsampled U and V planes*/#define ASVL_PAF_I422V 0x602/*8 bit Y plane followed by 8 bit 2x1 subsampled U and V planes*/#define ASVL_PAF_I422H 0x603/*8 bit Y plane followed by 8 bit U and V planes*/#define ASVL_PAF_I444 0x604/*8 bit Y plane followed by 8 bit 2x2 subsampled V and U planes*/#define ASVL_PAF_YV12 0x605/*8 bit Y plane followed by 8 bit 1x2 subsampled V and U planes*/#define ASVL_PAF_YV16V 0x606/*8 bit Y plane followed by 8 bit 2x1 subsampled V and U planes*/ 3.分析图像色彩格式由以上信息可知color space为yuv格式，采样比例为4:2:0，于是查阅YUV官方文档,以4:2:2 12 Bit举例，官方文档部分内容如下： YCbCr 4:2:2 12 Bit PlanarFourCC: 224EDHDR: yuv422_12leFormat: 12 bit components in 16 bit container, little endian. Y plane followed by 2x1 subsampled U/Cb and V/Cr planesExample: T2V041 (4K) Horizontal Vertical Y Sample Period 1 1 U/Cb Sample Period 2 1 V/Cr Sample Period 2 1 换言之，采样比例4:4:4（14bit）相当于12位Y通道加上2x1的U、V通道（12 bit Y plane followed by 8 bit 2x1 subsampled U and V planes）。,此时再回过头去看第二点中代码注释，可以找到对应的图像格式了","tags":[{"name":"图像处理","slug":"图像处理","permalink":"http://www.3cat.top/tags/图像处理/"}]},{"title":"gcc编译动态链接库","date":"2018-02-28T13:09:47.000Z","path":"2018/02/28/gcc编译动态链接库/","text":"未正确链接动态库（.so文件）导致编译失败，提示未定义的引用1234/tmp/cc71gMCR.o：在函数‘main’中：arcsoft_afd_samplecode.cpp:(.text+0x56d)：对‘AFD_FSDK_UninitialFaceEngine’未定义的引用arcsoft_afd_samplecode.cpp:(.text+0x635)：对‘AFD_FSDK_UninitialFaceEngine’未定义的引用collect2: error: ld returned 1 exit status 解决方法： 编译时指定动态库1g++ test.cpp -L [动态库目录] -l[xxx] -o a.out #此处xxx是动态库文件名，去掉前缀lib和后缀.so 用这种方式编译后，运行目标程序可能找不到动态库而无法运行 [推荐] 将so文件丢到系统默认库目录，查看/etc/ld.so.conf,将库文件丢进去后，sudo /sbin/ldconfig重新加载配置。","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.3cat.top/tags/Linux/"}]},{"title":"Web页面显示随机签名","date":"2018-02-26T05:27:08.000Z","path":"2018/02/26/简单js代码显示随机签名/","text":"介绍插入js代码的两种情况 常规web页面普通web页面只需要修改对应的HTML文档 对应的HTML和JavaScript代码 (注意被替换元素的id)：123456789101112131415161718192021222324252627&lt;div class=\"site-name\"&gt; &lt;h1 class=\"hidden\"&gt;加菲猫&lt;/h1&gt; &lt;a id=\"logo\" href=\"/.\"&gt;加菲猫&lt;/a&gt; &lt;!-- 下面id=\"subt\"的h2标签就是被内联显示的元素，id与前面JavaScript代码要一致--&gt; &lt;h2 id=\"subt\" &gt;海纳百川&lt;/h2&gt; &lt;script&gt; //声明一个数组，内容为你想显示的话 var words = [ \"愿你遇良人，予你欢喜城\", \"你是我千种诗意万种想象\", \"想做一个很酷的人扭头就走 比你酷比你狠\", \"对不起，也许我将要打扰你，打扰你一生，而不是一下\", \"balabala......\" ]; //使用自调用方式声明函数， (function()&#123; //创建0到words元素个数大小减一的随机数 var rand = parseInt(Math.random() * words.length); /* *使用内联显示方式改变原签名，getElementById(\"subt\")表示搜索*id=\"subt\"的*HTML标签元素， */ document.getElementById(\"subt\").innerHTML = words[rand]; console.log(words[rand]);//控制台调试信息，可以删掉 &#125;;)() &lt;/script&gt;&lt;/div&gt; hexo博客系统 其他blog系统自行参考，hexo每次generate都会删掉原来的HTML文档，由所使用主题内的jade代码重新解释生成，直接修改待发布的HTML文档不是长久之计，因此得先找到解释出签名标签的源代码。我使用某大神的BlueLake主题（表示感谢），解释出签名标签的代码为/home/hch/hexo/themes/BlueLake/layout/base.jade里面的 1p.description= config.subtitle //这里的config.subtitle为全局文本“海纳百川” 它对应的HTML代码： 1&lt;p class=\"description\"&gt;海纳百川&lt;/p&gt; 修改为： 12h2(id= \"subt\").description= config.subtitle //标签由p改为h2,添加id属性script(type='text/javascript', src=url_for(theme.js) + '/word.js',async)//此处src链接到写好的JavaScript代码 这样解释出的HTML代码就变为 12&lt;h2 id=\"subt\" class=\"description\"&gt;海纳百川&lt;/h2&gt;&lt;script type=\"text/javascript\" src=\"/js/word.js\" async&gt;&lt;/script&gt; 顺手记个js闭包实现计数原理 var add = (function()...)自调用函数实际上只执行了一次 第一次执行后，变量add为字符串 &quot;function () {return counter += 1;}&quot; 在myFunction()中调用了add() （add后面有括号表示调用函数而不是输出函数内容）：1234567var add = (function () &#123; var counter = 0; //第一次执行被初始化为0 return function () &#123;return counter += 1;&#125;&#125;)();function myFunction()&#123; document.getElementById(\"demo\").innerHTML = add();&#125; 番外 为了这一个小功能，刚看了几天Python后懵懂无知的我去学了Django和MySQL，还初步实现了数据库模型。正当我风风火火的开始学JavaScript打算用来在服务器与web页面传输数据时，让我悔恨终生的事就这么愉快地发生了…emmmm…","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.3cat.top/tags/JavaScript/"}]},{"title":"dpkg:处理 xxx (--configure)时出错解决办法（转载)","date":"2018-02-03T11:30:49.000Z","path":"2018/02/03/dpkg-处理-xxx-configure-时出错解决办法（转载/","text":"原地址已经不在了，这是二次转载http://blog.csdn.net/sftxlin/article/details/8680815 问题deepin上两次遇到下面这个问题，网上找到有效解决方法，拿小本本记下来 dpkg: 处理软件包 nginx-full (–configure)时出错： 子进程 已安装 post-installation 脚本 返回错误状态 1正在处理用于 man-db (2.7.6.1-2) 的触发器 …正在设置 docker (1.5-1+b1) …dpkg: 依赖关系问题使得 nginx 的配置工作不能继续： nginx 依赖于 nginx-full (&lt;&lt; 1.13.3-1.1~) | nginx-light (&lt;&lt; 1.13.3-1.1~) | nginx-extras (&lt;&lt; 1.13.3-1.1~)；然而： 软件包 nginx-full 尚未配置。 未安装软件包 nginx-light。 未安装软件包 nginx-extras。 nginx 依赖于 nginx-full (&gt;= 1.13.3-1) | nginx-light (&gt;= 1.13.3-1) | nginx-extras (&gt;= 1.13.3-1)；然而： 软件包 nginx-full 尚未配置。 未安装软件包 nginx-light。 未安装软件包 nginx-extras。 dpkg: 处理软件包 nginx (–configure)时出错： 依赖关系问题 - 仍未被配置在处理时有错误发生： nginx-full nginxE: Sub-process /usr/bin/dpkg returned an error code (1) 解决1234561.$ sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old //现将info文件夹更名2.$ sudo mkdir /var/lib/dpkg/info //再新建一个新的info文件夹3.$ sudo apt-get update, apt-get -f install4.$ sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old //执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info_old文件夹下5.$ sudo rm -rf /var/lib/dpkg/info //把自己新建的info文件夹删掉6.$ sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info //把以前的info文件夹重新改回名字","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.3cat.top/tags/Linux/"}]},{"title":"linux实用脚本","date":"2018-02-02T07:37:53.000Z","path":"2018/02/02/linux实用脚本/","text":"使用shell脚本操作数据库 脚本代码:显示数据库、数据表、属性 12345678#! /bin/bashmysql -uroot -p123 -e \"show databases;use MQTT;show tables;show columns from sht31;\" 效果 12345678910111213141516171819202122232425geek@geek-PC:~/hexo$ ../code/sqlopt.shmysql: [Warning] Using a password on the command line interface can be insecure.+--------------------+| Database |+--------------------+| information_schema || MQTT || mysql || performance_schema || sys |+--------------------++----------------+| Tables_in_MQTT |+----------------+| sht31 |+----------------++----------+-------------+------+-----+---------+-------+| Field | Type | Null | Key | Default | Extra |+----------+-------------+------+-----+---------+-------+| sht_time | datetime | YES | | NULL | || sht_temp | smallint(6) | YES | | NULL | || sht_hum | smallint(6) | YES | | NULL | || id | int(11) | YES | | NULL | |+----------+-------------+------+-----+---------+-------+ERROR 1064 (42000) at line 6: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;quit&apos; at line 1 批量修改文件后缀名 运行命令：./scriptName [原后缀] [新后缀] 123456789#!/bin/bashfor filename in `ls ./ |grep $1 ` #筛选出需要修改的文件 do echo \"原文件名：$filename\" newname=$&#123;filename/%$1/$2&#125; echo \"新文件名：$newname\" mv $filename $newname done","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.3cat.top/tags/Linux/"},{"name":"Shell","slug":"Shell","permalink":"http://www.3cat.top/tags/Shell/"}]},{"title":"openwrt极路由交叉编译踩坑记","date":"2018-01-26T15:12:44.000Z","path":"2018/01/26/路由器ipk软件编译笔记/","text":"简介 本次尝试对极路由4增强版进行openwrt交叉编译，从而实现在路由器上搭建mqtt的broker。本文主要学习如何编译合适的软件包。一般来说openwrt直接通过opkg软件源安装，但学会交叉编译可以利用源代码编译路由器软件 操作环境 电脑系统：Linux 路由器：极路由4增强版，官方固件（已进入开发者模式） openwrt编译系统：LEDE openwrt编译过程学习 参考宾神博客openwrt交叉编译教程,这里就不多做描述了。 如何进行编译配置 环境搭建好以后，在对应文件夹下输入命令make menuconfig,打开编译配置程序， 以下内容为个人猜测 固件类型(Target Sytem)：openwrt是一个强大的开源系统，许多人共同维护，提交了许多不同的分支，从而有了不同的固件类型。 处理器型号(SubTarget)：不同的固件类型支持的硬件也不同，稍后我会介绍如何快速找到适合自己路由器系统的方式。 路由器型号（Target Profile)。 快速找到路由器对应版本 首先确定自己路由器已经安装的固件信息。ssh登录路由器，针对我使用的路由器，ssh -p 1022 root@192.168.199.1。按提示登录后，输入cat /proc/cpuinfo,查看固件和硬件信息。 现在你再回到上一张图片，自习观察我圈出的信息，发现了什么？ 编译类型看配置窗口上面提示，解释下 built-in: 编译进.bin二进制文件 exclude：不编译 module：编译成ipk软件包 使用ssh将软件包发送到路由器内1scp -P 1022 &apos;/home/hch/Downloads/libmosquitto-nossl_1.4.14-1_mips_24kc.ipk&apos; root@192.168.199.1:/tmp 安装1opkg install softname 安装失败以及懒人解决办法提示invalid architecture，应该是极路由官方固件与我们选择的固件不是一个内核导致软件不兼容。最终还是在lede下了编译好的固件。发现该固件没有管理页面。 opkg install luci 重启路由器，OK了，有openwrt源什么都好办了，接下来安装了mosquitto,搭好了mqtt的broker。","tags":[{"name":"openwrt","slug":"openwrt","permalink":"http://www.3cat.top/tags/openwrt/"}]},{"title":"linux实用操作积累","date":"2018-01-25T18:38:07.000Z","path":"2018/01/26/linux实用操作/","text":"shell脚本 由多个linux指令集成在一个命令文件中 脚本执行命令：./shellname.sh 文件理论上可以使用任何后缀名，但shell脚本规范为.sh后缀 可以使用任何编辑器编辑 脚本以#!/bin/bash开头，表示使用/bin目录下的bash程序来解释执行脚本 编写好后需要使用chmod +x filename给相应脚本文件执行权限，否则无法使用常规命令执行脚本 示例 12345678#！/bin/bashwhile [ $x -ne 1000 ] do echo \"这是第$x秒,1000秒时结束计数！\"; x=$(($x+1)) #这样才不会被理解为字符串 sleep 1s #延迟1s done 查看文件夹大小 du -d 1 -h :查看深度为1的文件夹大小 Bash字符串处理123456789101112131415161718192021222324252627#基于Pattern Matching的子串替换$&#123;STR/$OLD/$NEW&#125;#替换第一个。$&#123;STR//$OLD/$NEW&#125;#替换所有。$&#123;STR/#$OLD/$NEW&#125;#替换开头。如果STR以OLD串开头，则替换。$&#123;STR/%$OLD/$NEW&#125;#替换结尾。如果STR以OLD串结尾，则替换。[user@laptop ~]# STR=”Hello World”[user@laptop ~]# echo $&#123;STR/o/O&#125;HellO World[user@laptop ~]# echo $&#123;STR//o/O&#125;HellO WOrld[user@laptop ~]# STR=”Hello World”[user@laptop ~]# echo $&#123;STR/#He/he&#125;hello World[user@laptop ~]# echo $&#123;STR/#o/he&#125;Hello World[user@laptop ~]# echo $&#123;STR/%He/he&#125;Hello World[user@laptop ~]# echo $&#123;STR/%ld/lD&#125;Hello WorlD#注意：不能使用正则表达式，只能使用?*的Shell扩展。只能用shell通配符如 * ? [list] [!list] [a-z]。#如果被替换串包含/字符，那么要转义，写成\\/。 统计命令 wc1234567Usage: wc [选项] [输入流文件]Count lines, words, and bytes for each FILE (or stdin) -c Count bytes -l Count newlines -w Count words -L Print longest line length 管道命令 命令1 | 命令2 ：把命令1的输出作为命令2的输入。 例如opkg list *zh*| grep luci | grep base,这个命令使用了通配符*和两个管道命令，从而显示出opkg安装列表中同时包含zh、luci、base三个子串的软件包。 ls -al | wc -l 统计当前文件夹下文件个数并输出 文件查找 find命令 find [路径] [表达式选项] [动作表达式] 例如：find /home 3.jpg (动作表达默认为print)","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.3cat.top/tags/Linux/"},{"name":"Shell","slug":"Shell","permalink":"http://www.3cat.top/tags/Shell/"}]},{"title":"deepin系统安装及使用教程","date":"2018-01-17T12:08:58.000Z","path":"2018/01/17/deepin系统安装及使用教程/","text":"deepin是国人基于Ubuntu 开发而来的一款Linux系统，世界排名第七。现在已经用了三天了，感觉还是很棒的。安装过够发现再没进过Windows，干脆就把之前装win的固态硬盘格式化用来装了deepin，速度瞬间快了不少。 这款系统最大的特点，毫无疑问是它对国人常用的软件的支持，这是其他linux系统难以实现的。deepin预装了ＱＱ，ＷＰＳ,网易云音乐，搜狗输入法。此外，还支持迅雷等一大波Windows下的软件。日常办公完全OK。这是其他Linux系统无法 与我用过的Centos，Ubuntu相比，出了软常用软件的支持这一大杀器之外，我再说所其他优缺点。这三款系统的图形界面都比较清爽漂亮，最开始笔者装了Ubuntu，但是笔者电脑（惠普 光影精灵二代）使用Ubuntu很不稳定，经常出现卡死的情况，所以后来换到了centos,果然稳定了不少，但是发现centos软件支持太少了，没有网易云，没有搜狗，Linux就成了电脑里的幽灵（我之前一直保持Linux和win10双系统），几乎没有再怎么用过。相比之下，deepin图形界面稳定，软件支持广（有QQ和WPS的Linux真心幸福）。但缺点也有，就是之前装在机械硬盘上的时候，打开软件比较慢，可见Linux的磁盘IO优化不如Windows好。（事实上其他Linux系统也是如此）。 与windows比较，图形化的软件规模，deepin一样铁定被Windows秒成渣。但是，Linux也优点摆在那，清爽无广告以及强大的终端… 下面来几张美照","tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.3cat.top/tags/Linux/"},{"name":"deepin","slug":"deepin","permalink":"http://www.3cat.top/tags/deepin/"}]},{"title":"markdown语法笔记","date":"2017-12-22T11:57:30.000Z","path":"2017/12/22/markdown语法笔记/","text":"记录了一般博客常用的功能所需语法 Markdown简介Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。事实上Markdow完全兼容HTML的语法，但使用Markdown排版非常简单。公认说法：让笔客可以专注于文字，不用花太多精力来排版。以下将其简称为md，本文使用Atom for Win编辑器实现。 代码篇 如果你只想高亮语句中的某个函数名或关键字： 输入：`function_name()` (反单引号,英文状态下，esc下面那个键) 显示：function_name() 插入代码块： 输入：上面的c++可替换其他编程语言简写，md支持多种编程语法高亮 显示效果 123456789int akm(int m, int n)&#123;if(m == 0) return (n+1);else if(n == 0) return akm(m-1, n);else return akm(m-1, akm(m, n-1));&#125; 标题篇md可轻松实现标题分级 输入： 12345# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题 显示： 一级标题二级标题三级标题四级标题五级标题 引用篇 一级引用 输入：> 引用文本内容 显示： 引用文本内容 多级引用 输入： 12345&gt;11111&gt;&gt;22222&gt;&gt;&gt;33333&gt;&gt;&gt;&gt;44444&gt;&gt;&gt;&gt;&gt;55555 显示： 11111 22222 33333 44444 55555 着重格式 输入 12341. *你好，world*2. _你好，world_3. **你好，world**4. __你好，world__ 显示 你好，world 你好，world 你好，world 你好，world 分割线可以使用连续三个或三个以上的*或-或_实现分割线，例如 输入：*** 显示： 图片插入 放一张高中暑假在青海拍的美景 ![我是图片](图片链接)，例如：![茶卡盐湖](https://raw.githubusercontent.com/geekhch/hexo/master/images/markdown/4.jpg?raw=true)显示效果为 链接跳转 隐式链接跳转与图片相似，只需要去掉前面的感叹号。 输入：[3CAT&#39;S Blog](http://www.3cat.top/myblog/) 效果：3CAT’S Blog 插入视频因md兼容HTML，可以直接将视频网站的视频分享代码贴到文档中例如输入：123&lt;embed src=&apos;http://player.youku.com/player.php/sid/XMzE0ODM1ODg1Ng==/v.swf&apos;allowFullScreen=&apos;true&apos; quality=&apos;high&apos; width=&quot;100%&quot; height=&apos;385&apos; align=&apos;middle&apos;allowScriptAccess=&apos;always&apos; type=&apos;application/x-shockwave-flash&apos;&gt; 效果：","tags":[{"name":"markdown","slug":"markdown","permalink":"http://www.3cat.top/tags/markdown/"}]}]